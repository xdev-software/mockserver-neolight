name: Test Deployment

on:
  workflow_dispatch:

jobs:
  publish-maven:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK OSSRH
      uses: actions/setup-java@v4
      with: # running setup-java again overwrites the settings.xml
        distribution: 'temurin'
        java-version: '17'
        server-id: ossrh
        server-username: MAVEN_CENTRAL_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}

    - name: Publish to OSSRH
      run: ./mvnw -B deploy -pl "client,server,testcontainers" -am -Possrh
      env:
        MAVEN_CENTRAL_USERNAME: ${{ secrets.S01_OSS_SONATYPE_MAVEN_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.S01_OSS_SONATYPE_MAVEN_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

    - name: Upload server standalone JAR
      uses: actions/upload-artifact@v4
      with:
        name: server-standalone
        path: server/target/server-standalone.jar
        if-no-files-found: error

  publish-docker:
    runs-on: ubuntu-latest
    needs: publish-maven
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
    - uses: actions/checkout@v4

    - name: Download server JAR
      uses: actions/download-artifact@v4
      with:
        name: server-standalone
        path: server/target

    - uses: docker/setup-qemu-action@v3

    - uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Login to ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/mockserver
          ghcr.io/${{ github.repository }}
        tags: |
          experimental

    - uses: docker/build-push-action@v5
      id: push
      with:
        context: ./server
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation (ghcr.io)
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/${{ github.repository }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
