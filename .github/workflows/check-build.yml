name: Check Build

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'
  pull_request:
    branches: [ develop ]
    paths-ignore: 
      - '**.md'
      - '.config/**'
      - '.github/**'
      - '.idea/**'
      - 'assets/**'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [17, 21]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'
      
    - name: Build with Maven
      run: ./mvnw -B clean package -P run-integration-tests
      
    - name: Check for uncommited changes
      run: |
        if [[ "$(git status --porcelain)" != "" ]]; then
          echo ----------------------------------------
          echo git status
          echo ----------------------------------------
          git status
          echo ----------------------------------------
          echo git diff
          echo ----------------------------------------
          git diff
          echo ----------------------------------------
          echo Troubleshooting
          echo ----------------------------------------
          echo "::error::Unstaged changes detected. Locally try running: git clean -ffdx && ./mvnw -B clean package"
          exit 1
        fi

    - name: Upload standalone server JAR
      uses: actions/upload-artifact@v4
      with:
        name: server-${{ matrix.java }}
        path: server/target/server-standalone.jar
        if-no-files-found: error

    # Build docker
    - uses: docker/setup-qemu-action@v3

    - uses: docker/setup-buildx-action@v3

    - uses: docker/build-push-action@v6
      with:
        context: ./server
        push: false
        tags: mockserver-standalone:experimental
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max

  code-style:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || !startsWith(github.head_ref, 'renovate/') }}

    strategy:
      matrix:
        java: [17]
        distribution: [temurin]

    steps:
    - uses: actions/checkout@v4
      
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
        cache: 'maven'

    - name: Run Checkstyle
      run: ./mvnw -B checkstyle:check -P checkstyle -T2C
