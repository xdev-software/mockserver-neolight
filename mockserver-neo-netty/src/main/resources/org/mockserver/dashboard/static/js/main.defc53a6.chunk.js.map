{"version":3,"sources":["store/configureStore.js","actions/index.js","components/RequestFilter.js","components/JsonItem.js","components/LogMessage.js","components/ListHeader.js","containers/LogList.js","containers/JsonList.js","containers/Grid.js","containers/App.js","index.js","reducers/entities.js","reducers/index.js","middleware/socket.js","middleware/exposeState.js","store/configureStore.prod.js"],"names":["module","exports","require","__webpack_require__","d","__webpack_exports__","CONNECT_SOCKET","SEND_MESSAGE","sendMessage","MESSAGE_RECEIVED","webSocketMessageReceived","DISCONNECT_SOCKET","disconnectSocket","message","host","port","secure","dispatch","type","sendWebSocketMessage","entities","filterNullsMultiValue","rawItems","_step","items","undefined","_iterator","_createForOfIteratorHelper","s","n","done","_step2","rawItem","value","valueSet","_iterator2","values","err","e","f","name","push","loadData","_ref","_ref$host","_ref$port","_ref$secure","_ref$requestMatcher","requestMatcher","requestFilter","method","path","keepAlive","headers","queryStringParameters","cookies","enabled","_step3","_iterator3","filterNullsSingleValue","RequestFilter","renderValues","_ref2","fields","disabled","react_default","a","createElement","style","width","padding","paddingRight","display","verticalAlign","map","field","index","key","Field","fullWidth","component","TextField","hintText","onChange","console","log","floatingLabelText","index_es","minWidth","onClick","remove","remove_default","add_default","renderKeysToMultiValues","_ref3","title","color","paddingTop","textAlign","fontFamily","concat","AutoComplete","openOnFocus","filter","MUIAutoComplete","fuzzyFilter","dataSource","FieldArray","_this","mini","renderKeysToValues","_ref4","this","props","nextProps","expanded","margin","actAsExpander","showExpandableButton","backgroundColor","expandable","Toggle","label","labelPosition","marginBottom","paddingLeft","SelectField","primaryText","overflow","Component","selector","formValueSelector","reduxForm","form","initialValues","destroyOnUnmount","mapDispatchToProps","connect","state","requestFilterExpanded","pure","JsonItem","_this$props","_this$props$collapsed","collapsed","_this$props$jsonItem","jsonItem","_this$props$descripti","description","_this$props$display","_this$props$enableCli","enableClipboard","_this$props$textStyle","textStyle","Array","isArray","jsonDiv","json","maxWidth","first","object","second","textOverflow","addDescription","main_default","src","whiteSpace","top","theme","iconStyle","indentWidth","shouldCollapse","displayObjectSize","displayDataTypes","onEdit","onAdd","onDelete","LogMessage","addLinks","urlMatch","match","matchedUrl","substr","indexOf","textDecoration","href","target","rel","length","_this$props$logMessag","logMessage","_this$props$group","group","_this$props$indent","indent","className","borderStyle","borderColor","marginLeft","marginTop","marginRight","paddingBottom","item","cellStyle","Object","assign","fontSize","position","messageParts","messagePart","argument","multiline","because","line","reason","lineHeight","viewBox","fill","height","JsonItem_JsonItem","letterSpacing","renderItem","ListHeader","_this$props$text","text","font","LogList","_this$props$header","header","_this$props$items","ListHeader_ListHeader","overflowY","maxHeight","minHeight","borderRadius","borderCollapse","LogMessage_LogMessage","JsonList","_this$props$reverseIn","reverseIndex","Grid","_this$props$entities","_this$props$entities$","activeExpectations","_this$props$entities$2","proxiedRequests","_this$props$entities$3","recordedRequests","_this$props$entities$4","logMessages","borderWidth","LogList_LogList","JsonList_JsonList","float","borderRightStyle","borderRightWidth","_state$entities","_state$entities$activ","_state$entities$proxi","_state$entities$recor","_state$entities$logMe","_state$requestFilter","App","components_RequestFilter","containers_Grid","window","location","search","parse","hostname","protocol","store","configureStore","render","es","App_App","document","getElementById","arguments","action","rootReducer","combineReducers","middleware_socket","socket","connected","close","connectSocket","next","WebSocket","onmessage","event","JSON","data","onclose","onopen","readyState","send","stringify","exposeState","objectSpread","getState","preloadedState","createStore","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.defc53a6.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./configureStore.prod')\n} else {\n    module.exports = require('./configureStore.dev')\n}\n","export const CONNECT_SOCKET = 'CONNECT_SOCKET';\n\nconst connectWebSocket = (host, port, secure, contextPath) => ({\n    type: CONNECT_SOCKET,\n    host: host,\n    port: port,\n    secure: secure,\n    contextPath: contextPath\n});\n\nexport const connectSocket = (host, port, secure, contextPath) => (dispatch) => {\n    return dispatch(connectWebSocket(host, port, secure, contextPath));\n};\n\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\n\nconst sendWebSocketMessage = (message, host, port, secure) => ({\n    type: SEND_MESSAGE,\n    message: message,\n    host: host,\n    port: port,\n    secure: secure\n});\n\nexport const sendMessage = (message, host, port, secure) => (dispatch) => {\n    return dispatch(sendWebSocketMessage(message, host, port, secure));\n};\n\nexport const MESSAGE_RECEIVED = 'MESSAGE_RECEIVED';\n\nexport const webSocketMessageReceived = (message) => ({\n    type: MESSAGE_RECEIVED,\n    entities: message\n});\n\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET';\n\nconst disconnectWebSocket = () => ({\n    type: DISCONNECT_SOCKET\n});\n\nexport const disconnectSocket = () => (dispatch) => {\n    return dispatch(disconnectWebSocket());\n};\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Field, FieldArray, formValueSelector, reduxForm} from 'redux-form';\nimport {\n    AutoComplete as MUIAutoComplete,\n    Card,\n    CardHeader,\n    CardText,\n    FloatingActionButton,\n    MenuItem,\n    IconButton\n} from 'material-ui';\nimport ContentAdd from 'material-ui/svg-icons/content/add';\nimport ContentRemove from 'material-ui/svg-icons/content/remove';\nimport PropTypes from \"prop-types\";\nimport {AutoComplete, SelectField, TextField, Toggle,} from 'redux-form-material-ui';\nimport {disconnectSocket, sendMessage} from \"../actions\";\n\nlet filterNullsMultiValue = function (rawItems) {\n    let items = undefined;\n    for (let rawItem of rawItems) {\n        let valueSet = false;\n        for (let value of rawItem.values) {\n            if (value) {\n                valueSet = true;\n            }\n        }\n        if (rawItem.name && valueSet) {\n            if (!items) {\n                items = [];\n            }\n            items.push(rawItem);\n        }\n    }\n    return items;\n};\nlet filterNullsSingleValue = function (rawItems) {\n    let items = undefined;\n    for (let rawItem of rawItems) {\n        if (rawItem.name && rawItem.value) {\n            if (!items) {\n                items = [];\n            }\n            items.push(rawItem);\n        }\n    }\n    return items;\n};\nconst loadData = ({host = \"127.0.0.1\", port = \"1080\", secure = true, requestMatcher = {}, sendMessage}) => {\n    let requestFilter = {\n        method: undefined,\n        path: undefined,\n        keepAlive: undefined,\n        secure: undefined,\n        headers: undefined,\n        queryStringParameters: undefined,\n        cookies: undefined,\n    };\n    if (requestMatcher.enabled) {\n        requestFilter = {\n            method: requestMatcher.method,\n            path: requestMatcher.path,\n            keepAlive: requestMatcher.keepAlive ? true : undefined,\n            secure: requestMatcher.secure ? true : undefined,\n            headers: undefined,\n            queryStringParameters: undefined,\n            cookies: undefined,\n        };\n        requestFilter.cookies = filterNullsSingleValue(requestMatcher.cookies);\n        requestFilter.headers = filterNullsMultiValue(requestMatcher.headers);\n        requestFilter.queryStringParameters = filterNullsMultiValue(requestMatcher.queryStringParameters);\n    }\n    sendMessage(requestFilter, host, port, secure);\n};\n\nclass RequestFilter extends Component {\n    static propTypes = {\n        host: PropTypes.string.isRequired,\n        port: PropTypes.string.isRequired,\n        secure: PropTypes.bool.isRequired\n    };\n\n    componentWillUnmount() {\n        this.props.disconnectSocket()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.requestMatcher !== this.props.requestMatcher || nextProps.expanded !== this.props.expanded) {\n            loadData(nextProps)\n        }\n    }\n\n    renderValues = ({fields, disabled}) => {\n        return (\n            <div style={{\n                width: \"50%\",\n                padding: \"5px\",\n                paddingRight: \"10px\",\n                display: \"inline-block\",\n                verticalAlign: \"bottom\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"70%\",\n                }}>\n\n                    <Field\n                        disabled={disabled}\n                        fullWidth={true}\n                        style={{\n                            width: \"75%\",\n                        }}\n                        name={field}\n                        component={TextField}\n                        hintText=\"Value\"\n                        onChange={(e) => {\n                            console.log(e)\n                        }}\n                        floatingLabelText=\"Value\"\n                    />\n                    {index > 0 ?\n                        <IconButton style={{\n                            display: \"inline-block\",\n                            verticalAlign: \"bottom\",\n                            minWidth: \"28px\",\n                            width: \"28px\",\n                        }} disabled={disabled} onClick={() => fields.remove(index)}>\n                            <ContentRemove/>\n                        </IconButton>\n                        : \"\"}\n\n                </div>)}\n                <IconButton style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                    minWidth: \"28px\",\n                    width: \"28px\",\n                }} disabled={disabled} onClick={() => fields.push(\"\")}>\n                    <ContentAdd/>\n                </IconButton>\n            </div>)\n    };\n    renderKeysToMultiValues = ({fields, disabled, title}) => {\n        return (<div style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            paddingRight: \"10px\",\n        }}>\n            <div style={{\n                color: disabled ? \"#9c9c9c\" : \"rgb(0, 188, 212)\",\n                width: \"20%\",\n                paddingTop: \"45px\",\n                paddingRight: \"15px\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                textAlign: \"right\",\n                fontFamily: \"Roboto, sans-serif\",\n            }}>{title}\n            </div>\n            <div style={{\n                display: \"inline-block\",\n                width: \"75%\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"80%\",\n                }}>\n                    <div style={{\n                        width: \"30%\",\n                        padding: \"5px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"top\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            name={`${field}.name`}\n                            component={AutoComplete}\n                            hintText=\"Name\"\n                            floatingLabelText=\"Name\"\n                            fullWidth={true}\n                            openOnFocus\n                            filter={MUIAutoComplete.fuzzyFilter}\n                            dataSource={[]}\n                        />\n                    </div>\n                    <FieldArray name={`${field}.values`} component={this.renderValues} disabled={disabled}/>\n                    {index > 0 ? <FloatingActionButton mini={true} style={{\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\"\n                    }} disabled={disabled} onClick={() => fields.remove(index)}>\n                        <ContentRemove/>\n                    </FloatingActionButton> : \"\"}\n                </div>)}\n                <FloatingActionButton mini={true} style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                }} disabled={disabled} onClick={() => fields.push({\n                    values: [\"\"]\n                })}>\n                    <ContentAdd/>\n                </FloatingActionButton>\n            </div>\n        </div>)\n    };\n    renderKeysToValues = ({fields, disabled, title}) => {\n        return (<div style={{\n            width: \"100%\",\n            display: \"inline-block\",\n            paddingRight: \"10px\",\n        }}>\n            <div style={{\n                color: disabled ? \"#9c9c9c\" : \"rgb(0, 188, 212)\",\n                width: \"20%\",\n                paddingTop: \"45px\",\n                paddingRight: \"15px\",\n                display: \"inline-block\",\n                verticalAlign: \"top\",\n                textAlign: \"right\",\n                fontFamily: \"Roboto, sans-serif\",\n            }}>{title}\n            </div>\n            <div style={{\n                display: \"inline-block\",\n                width: \"75%\",\n            }}>\n                {fields.map((field, index) => <div key={index} style={{\n                    display: \"inline-block\",\n                    width: \"80%\",\n                }}>\n                    <div style={{\n                        width: \"30%\",\n                        padding: \"5px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"top\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            name={`${field}.name`}\n                            component={AutoComplete}\n                            hintText=\"Name\"\n                            floatingLabelText=\"Name\"\n                            fullWidth={true}\n                            openOnFocus\n                            filter={MUIAutoComplete.fuzzyFilter}\n                            dataSource={[]}\n                        />\n                    </div>\n                    <div style={{\n                        width: \"45%\",\n                        padding: \"5px\",\n                        paddingRight: \"10px\",\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\",\n                    }}>\n                        <Field\n                            disabled={disabled}\n                            fullWidth={true}\n                            name={`${field}.value`}\n                            component={TextField}\n                            hintText=\"Value\"\n                            floatingLabelText=\"Value\"\n                        />\n                    </div>\n                    {index > 0 ? <FloatingActionButton mini={true} style={{\n                        display: \"inline-block\",\n                        verticalAlign: \"bottom\"\n                    }} disabled={disabled} onClick={() => fields.remove(index)}>\n                        <ContentRemove/>\n                    </FloatingActionButton> : \"\"}\n                </div>)}\n                <FloatingActionButton mini={true} style={{\n                    display: \"inline-block\",\n                    verticalAlign: \"bottom\",\n                }} disabled={disabled} onClick={() => fields.push({})}>\n                    <ContentAdd/>\n                </FloatingActionButton>\n            </div>\n        </div>)\n    };\n\n    render() {\n        const disabled = !this.props.requestMatcher.enabled;\n        return (\n            <div style={{\n                margin: \"1%\",\n                width: \"98%\"\n            }}>\n                <Card expanded={this.expanded}>\n                    <CardHeader\n                        title=\"Filter\"\n                        actAsExpander={true}\n                        showExpandableButton={true}\n                        style={{\n                            backgroundColor: disabled ? \"rgba(220, 220, 220, 0.5)\" : \"rgba(0, 188, 212, 0.75)\"\n                        }}\n                    />\n                    <CardText expandable={true}>\n                        <div style={{\n                            display: \"inline\"\n                        }}>\n                            <div style={{\n                                width: \"10%\",\n                                display: \"inline-block\",\n                                verticalAlign: \"top\",\n                            }}>\n                                <div style={{\n                                    paddingRight: \"10px\",\n                                    padding: \"5px\",\n                                    display: \"inline-block\",\n                                }}>\n                                    <Field\n                                        name=\"enabled\"\n                                        component={Toggle}\n                                        label=\"Enabled\"\n                                        labelPosition=\"left\"\n                                    />\n                                </div>\n                            </div>\n                            <div style={{\n                                width: \"90%\",\n                                display: \"inline-block\",\n                                verticalAlign: \"bottom\",\n                                marginBottom: \"2%\",\n                            }}>\n                                <div style={{\n                                    width: \"32%\",\n                                    paddingLeft: \"3%\",\n                                    display: \"inline-block\",\n                                    verticalAlign: \"top\",\n                                }}>\n                                    <div>\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"method\"\n                                                component={SelectField}\n                                                fullWidth={true}\n                                                floatingLabelText=\"Method\"\n                                            >\n                                                <MenuItem value=\"\" primaryText=\"\" />\n                                                <MenuItem value=\"CONNECT\" primaryText=\"CONNECT\" />\n                                                <MenuItem value=\"DELETE\" primaryText=\"DELETE\" />\n                                                <MenuItem value=\"GET\" primaryText=\"GET\" />\n                                                <MenuItem value=\"HEAD\" primaryText=\"HEAD\" />\n                                                <MenuItem value=\"OPTIONS\" primaryText=\"OPTIONS\" />\n                                                <MenuItem value=\"PATCH\" primaryText=\"PATCH\" />\n                                                <MenuItem value=\"POST\" primaryText=\"POST\" />\n                                                <MenuItem value=\"PUT\" primaryText=\"PUT\" />\n                                                <MenuItem value=\"TRACE\" primaryText=\"TRACE\" />\n                                            </Field>\n                                        </div>\n\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"path\"\n                                                component={TextField}\n                                                fullWidth={true}\n                                                hintText=\"Path\"\n                                                floatingLabelText=\"Path\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"bottom\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"secure\"\n                                                component={Toggle}\n                                                label=\"Secure\"\n                                                labelPosition=\"right\"\n                                            />\n                                        </div>\n\n                                        <div style={{\n                                            width: \"45%\",\n                                            padding: \"5px\",\n                                            display: \"inline-block\",\n                                            verticalAlign: \"bottom\",\n                                            overflow: \"none\",\n                                        }}>\n                                            <Field\n                                                disabled={disabled}\n                                                name=\"keepAlive\"\n                                                component={Toggle}\n                                                label=\"Keep-Alive\"\n                                                labelPosition=\"right\"\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div style={{\n                                    width: \"65%\",\n                                    display: \"inline-block\",\n                                    verticalAlign: \"bottom\",\n                                }}>\n                                    <div>\n                                        <FieldArray name={`headers`} component={this.renderKeysToMultiValues}\n                                                    disabled={disabled} title={\"Headers:\"}/>\n                                        <FieldArray name={`cookies`} component={this.renderKeysToValues}\n                                                    disabled={disabled}\n                                                    title={\"Cookies:\"}/>\n                                        <FieldArray name={`queryStringParameters`}\n                                                    component={this.renderKeysToMultiValues}\n                                                    disabled={disabled} title={\"Query Parameters:\"}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </CardText>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst formName = 'requestFilter';\nconst selector = formValueSelector(formName);\n\nRequestFilter = reduxForm({\n    form: formName,\n    initialValues: {\n        headers: [{\n            values: [\"\"]\n        }],\n        queryStringParameters: [{\n            values: [\"\"]\n        }],\n        cookies: [{}],\n    },\n    destroyOnUnmount: false\n})(RequestFilter);\n\nconst mapStateToProps = (state, props) => {\n    return {\n        requestMatcher: selector(state, 'enabled', 'method', 'path', 'keepAlive', 'secure', 'headers', 'queryStringParameters', 'cookies'),\n        expanded: state.requestFilterExpanded,\n    }\n};\n\nconst mapDispatchToProps = {\n    sendMessage,\n    disconnectSocket\n};\n\nRequestFilter = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    undefined,\n    {pure: true}\n)(RequestFilter);\n\nexport default RequestFilter;","import React, {Component} from 'react';\nimport ReactJson from 'react-json-view';\nimport PropTypes from \"prop-types\";\nimport './jsonItem.css';\n\nexport default class JsonItem extends Component {\n    static propTypes = {\n        description: PropTypes.oneOfType([PropTypes.object.isRequired, PropTypes.string.isRequired]),\n        jsonItem: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.array.isRequired]).isRequired,\n    };\n\n    render() {\n        const {\n            collapsed = 0,\n            jsonItem = null,\n            description = null,\n            display = \"inline-block\",\n            enableClipboard = true,\n            textStyle = {}\n        } = this.props;\n\n        function addDescription(description, jsonDiv) {\n            if (description.json) {\n                return <div key={\"description\"}\n                            style={{\n                                display: \"table-row\",\n                                maxWidth: \"200px\",\n                                overflow: \"hidden\"\n                            }}>\n                    <JsonItem key={\"description_first\"}\n                              index={null}\n                              collapsed=\"0\"\n                              display={\"inline-block\"}\n                              textStyle={{\n                                  fontFamily: \"monospace, Roboto, sans-serif\",\n                                  display: \"table-cell\",\n                                  padding: \"5px\",\n                              }}\n                              enableClipboard={false}\n                              jsonItem={description.first}/>\n                    <JsonItem key={\"description_object\"}\n                              index={null}\n                              collapsed=\"0\"\n                              display={\"table-cell\"}\n                              textStyle={{\n                                  fontFamily: \"monospace, Roboto, sans-serif\",\n                                  display: \"table-cell\",\n                                  verticalAlign: \"top\",\n                                  padding: \"5px\",\n                              }}\n                              enableClipboard={false}\n                              jsonItem={description.object}/>\n                    <JsonItem key={\"description_second\"}\n                              index={null}\n                              collapsed=\"0\"\n                              display={\"inline-block\"}\n                              textStyle={{\n                                  fontFamily: \"monospace, Roboto, sans-serif\",\n                                  display: \"table-cell\",\n                                  padding: \"5px\",\n                              }}\n                              enableClipboard={false}\n                              jsonItem={description.second}/>\n                    {jsonDiv}\n                </div>;\n            } else {\n                return (<div key={\"wrap_div\"}>\n                    <JsonItem key={\"description\"}\n                              index={null}\n                              collapsed=\"0\"\n                              display={\"inline-block\"}\n                              textStyle={{\n                                  fontFamily: \"monospace, Roboto, sans-serif\",\n                                  display: \"table-cell\",\n                                  padding: \"5px\",\n                                  maxWidth: \"1100px\",\n                                  overflow: \"hidden\",\n                                  textOverflow: \"ellipsis\"\n                              }}\n                              enableClipboard={false}\n                              jsonItem={description}/>\n                    {jsonDiv}\n                </div>);\n            }\n        }\n\n        if (typeof jsonItem === \"object\" || Array.isArray(jsonItem)) {\n            if (description) {\n                return addDescription(description, <ReactJson src={jsonItem}\n                                                              key={\"json\"}\n                                                              style={{\n                                                                  whiteSpace: \"nowrap\",\n                                                                  paddingTop: \"6px\",\n                                                                  top: \"-2px\",\n                                                                  display: display,\n                                                              }}\n                                                              name={null}\n                                                              theme={\"tomorrow\"}\n                                                              iconStyle={\"triangle\"}\n                                                              indentWidth={4}\n                                                              collapsed={collapsed != null ? collapsed : 0}\n                                                              shouldCollapse={() => {\n                                                                  return false\n                                                              }}\n                                                              enableClipboard={enableClipboard}\n                                                              displayObjectSize={false}\n                                                              displayDataTypes={false}\n                                                              onEdit={false}\n                                                              onAdd={false}\n                                                              onDelete={false}/>);\n            } else {\n                return (<ReactJson src={jsonItem}\n                                   key={\"json\"}\n                                   style={{\n                                       whiteSpace: \"nowrap\",\n                                       paddingLeft: \"5px\",\n                                       top: \"-1px\",\n                                       display: display\n                                   }}\n                                   name={null}\n                                   theme={\"tomorrow\"}\n                                   iconStyle={\"triangle\"}\n                                   indentWidth={4}\n                                   collapsed={collapsed != null ? collapsed : 0}\n                                   shouldCollapse={() => {\n                                       return false\n                                   }}\n                                   enableClipboard={enableClipboard}\n                                   displayObjectSize={false}\n                                   displayDataTypes={false}\n                                   onEdit={false}\n                                   onAdd={false}\n                                   onDelete={false}/>);\n            }\n        } else if (typeof jsonItem === \"string\") {\n            return (<pre style={textStyle}>{jsonItem}</pre>);\n        } else {\n            return (<div/>);\n        }\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport JsonItem from \"./JsonItem\";\nimport './log.css';\n\nexport default class LogMessage extends Component {\n    static propTypes = {\n        logMessage: PropTypes.oneOfType([PropTypes.object.isRequired, PropTypes.array.isRequired]).isRequired,\n        group: PropTypes.object\n    };\n\n    render() {\n\n        function addLinks(value) {\n            var urlMatch = value.match(\"(http){1}s?://[^\\\\s]*\");\n            if (urlMatch) {\n                let matchedUrl = urlMatch[0];\n                return (<span>{value.substr(0, value.indexOf(matchedUrl))}<a style={{\n                    textDecoration: \"underline\",\n                    color: \"rgb(95, 113, 245)\"\n                }} href={matchedUrl} target=\"_blank\" rel=\"noopener noreferrer\">{matchedUrl}</a>{value.substr(value.indexOf(matchedUrl) + matchedUrl.length)}</span>);\n            } else {\n                return value;\n            }\n        }\n\n        const {\n            logMessage = {},\n            group = false,\n            indent = false,\n        } = this.props;\n\n        function renderItem(logMessage) {\n            let cellStyle = {\n                display: \"table-cell\",\n                fontFamily: \"monospace, Roboto, sans-serif\"\n            };\n            return <div style={Object.assign({\n                paddingLeft: \"5px\",\n                paddingRight: \"5px\",\n                fontSize: indent ? \"0.9em\" : \"1.0em\"\n            }, logMessage.style)}>\n                <div style={Object.assign({\n                    whiteSpace: \"pre\",\n                    position: \"relative\",\n                }, cellStyle)}>{logMessage.description}</div>\n                {logMessage.messageParts ? logMessage.messageParts.map((messagePart) => {\n                    if (messagePart.value) {\n                        if (!messagePart.argument) {\n                            return <div key={messagePart.key}\n                                        style={cellStyle}>{addLinks(messagePart.value)}</div>;\n                        } else {\n                            if (messagePart.multiline || messagePart.because) {\n                                let line = messagePart.value.map(\n                                    (reason, index) => {\n                                        let color = \"rgb(255, 255, 255)\";\n                                        if (messagePart.because) {\n                                            if (reason.indexOf(\"matched\") !== -1) {\n                                                color = \"rgb(107, 199, 118)\";\n                                            } else if (reason.indexOf(\"didn't match\") !== -1) {\n                                                color = \"rgb(216, 88, 118)\";\n                                            } else {\n                                                color = \"rgb(255, 255, 255)\";\n                                            }\n                                        }\n                                        return <span key={messagePart.key + \"_\" + index}\n                                                     style={{\n                                                         marginTop: \"-10px\",\n                                                         color: color,\n                                                         display: \"block\",\n                                                         fontSize: \"0.95em\",\n                                                         lineHeight: \"1.5em\",\n                                                         whiteSpace: \"pre\",\n                                                         paddingLeft: \"20px\",\n                                                         paddingBottom: \"10px\",\n                                                     }}>{addLinks(reason)}</span>\n                                    }\n                                );\n                                return <div key={messagePart.key}\n                                            style={Object.assign({paddingLeft: \"5px\",}, cellStyle)}>\n                                    <details className={\"because\"}>\n                                        <summary style={{\n                                            color: \"rgb(222, 147, 95)\",\n                                            fontSize: \"19px\",\n                                            lineHeight: \"25px\",\n                                            paddingLeft: \"5px\",\n                                            paddingTop: \"0px\",\n                                            marginTop: \"-1px\",\n                                        }}><span>\n                                            <svg className={\"summaryClosed\"} viewBox=\"0 0 15 15\" fill=\"currentColor\" style={{\n                                                verticalAlign: \"top\",\n                                                color: \"rgb(178, 148, 187)\",\n                                                height: \"1em\",\n                                                width: \"1em\",\n                                                paddingLeft: \"2px\",\n                                                paddingTop: \"5px\"\n                                            }}>\n                                                <path d=\"M0 14l6-6-6-6z\"/>\n                                            </svg>\n                                            <svg className={\"summaryOpen\"} viewBox=\"0 0 15 15\" fill=\"currentColor\" style={{\n                                                verticalAlign: \"top\",\n                                                color: \"rgb(129, 162, 190)\",\n                                                height: \"1em\",\n                                                width: \"1em\",\n                                                paddingLeft: \"2px\",\n                                                paddingTop: \"5px\",\n                                                paddingBottom: \"15px\",\n                                            }}>\n                                                <path d=\"M0 5l6 6 6-6z\"/>\n                                            </svg>\n                                            <span className={\"summaryClosed\"}>...</span>\n                                        </span>\n                                        </summary>\n                                        {line}\n                                    </details>\n                                </div>;\n                            } else if (messagePart.json) {\n                                return <JsonItem key={messagePart.key}\n                                                 index={null}\n                                                 collapsed=\"0\"\n                                                 display={\"table-cell\"}\n                                                 textStyle={{\n                                                     fontFamily: \"monospace, Roboto, sans-serif\",\n                                                     color: \"rgb(255, 255, 255)\",\n                                                     display: \"table-cell\",\n                                                     paddingLeft: \"5px\",\n                                                     paddingRight: \"5px\",\n                                                     whiteSpace: \"pre\",\n                                                     letterSpacing: \"0.08em\",\n                                                 }}\n                                                 enableClipboard={true}\n                                                 jsonItem={typeof messagePart.value === \"number\" ? \"\" + messagePart.value : messagePart.value}/>;\n                            } else {\n                                return <div key={messagePart.key}\n                                            style={{\n                                                fontFamily: \"Roboto, sans-serif\",\n                                                color: \"rgb(255, 255, 255)\",\n                                                display: \"table-cell\",\n                                                paddingLeft: \"5px\",\n                                                paddingRight: \"5px\",\n                                                whiteSpace: \"pre\",\n                                                letterSpacing: \"0.08em\",\n                                            }}>{addLinks(messagePart.value)}</div>;\n                            }\n                        }\n                    } else {\n                        return <span/>;\n                    }\n                }) : <div style={Object.assign({\n                    fontSize: \"19px\",\n                    lineHeight: \"25px\"\n                }, cellStyle)}>\n                    <svg className={\"logGroupSummaryClosed\"} viewBox=\"0 0 15 15\" fill=\"currentColor\" style={{\n                        verticalAlign: \"top\",\n                        color: \"rgb(178, 148, 187)\",\n                        height: \"1em\",\n                        width: \"1em\",\n                        paddingLeft: \"2px\",\n                        paddingTop: \"5px\",\n                    }}>\n                        <path d=\"M0 14l6-6-6-6z\"/>\n                    </svg>\n                    <svg className={\"logGroupSummaryOpen\"} viewBox=\"0 0 15 15\" fill=\"currentColor\" style={{\n                        verticalAlign: \"top\",\n                        color: \"rgb(129, 162, 190)\",\n                        height: \"1em\",\n                        width: \"1em\",\n                        paddingLeft: \"2px\",\n                        paddingTop: \"5px\",\n                    }}>\n                        <path d=\"M0 5l6 6 6-6z\"/>\n                    </svg>\n                    <span className={\"logGroupSummaryClosed\"}>...</span></div>}\n            </div>;\n        }\n\n        if (group) {\n            return (<details className={\"logGroup\"}>\n                <summary style={{\n                    color: \"rgb(222, 147, 95)\",\n                    // backgroundColor: \"rgb(43, 52, 62)\"\n                }}><LogMessage key={group.key + \"_summary\"}\n                               logMessage={group.value}/></summary>\n                <div style={{\n                    borderStyle: \"dashed\",\n                    borderColor: \"rgb(43, 52, 62)\",\n                    marginLeft: \"35px\",\n                    marginTop: \"10px\",\n                    marginRight: \"5px\",\n                    marginBottom: \"10px\",\n                    display: \"inline-block\",\n                    paddingLeft: \"5px\",\n                    paddingRight: \"5px\",\n                    paddingBottom: \"5px\",\n                }}>{logMessage.map((item, index) => <LogMessage index={index}\n                                                                indent={true}\n                                                                key={item.key}\n                                                                logMessage={item.value}/>)}</div>\n            </details>);\n        } else {\n            return renderItem(logMessage);\n        }\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ListHeader extends Component {\n    static propTypes = {\n        text: PropTypes.string.isRequired\n    };\n\n    render() {\n        const {\n            text = \"\"\n        } = this.props;\n        return (\n            <div style={{\n                font: \"1.25em 'Averia Sans Libre', Helvetica, Arial, sans-serif\",\n                margin: \"0px 0px 3px 2px\"\n            }}>{text}</div>\n        )\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport LogMessage from \"../components/LogMessage\";\nimport ListHeader from \"../components/ListHeader\";\n\nexport default class LogList extends Component {\n    static propTypes = {\n        header: PropTypes.string.isRequired,\n        items: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            value: PropTypes.object.isRequired\n        })).isRequired, PropTypes.array.isRequired]).isRequired,\n    };\n\n    render() {\n        const {\n            header = \"\",\n            items = [],\n        } = this.props;\n        return (\n            <div style={{\n                padding: \"2px 0\"\n            }}>\n                <ListHeader text={header}/>\n                <div style={{\n                    overflowY: \"scroll\",\n                    maxHeight: \"700px\",\n                    minHeight: \"100px\",\n                    borderRadius: \"5px\",\n                    margin: \"2px 0px 3px\",\n                    paddingTop: \"5px\",\n                    paddingBottom: \"5px\",\n                    backgroundColor: \"rgb(29, 31, 33)\",\n                    color: \"rgb(250, 250, 250)\",\n                }}>\n                    <div style={{\n                        borderCollapse: \"collapse\",\n                        display: \"table\",\n                        minWidth: \"100%\"\n                    }}>{items.map((item, index) => <LogMessage index={index}\n                                                               key={item.key}\n                                                               group={item.group}\n                                                               logMessage={item.value}/>)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport ListHeader from \"../components/ListHeader\";\nimport JsonItem from \"../components/JsonItem\";\n\nexport default class JsonList extends Component {\n    static propTypes = {\n        header: PropTypes.string.isRequired,\n        items: PropTypes.arrayOf(PropTypes.shape({\n            key: PropTypes.string.isRequired,\n            description: PropTypes.oneOfType([PropTypes.object.isRequired, PropTypes.string.isRequired]).isRequired,\n            value: PropTypes.object.isRequired\n        })).isRequired,\n    };\n\n    render() {\n        const {\n            header = \"\",\n            items = [],\n            reverseIndex = true\n        } = this.props;\n        return (\n            <div style={{\n                padding: \"2px 0\"\n            }}>\n                <ListHeader text={header}/>\n                <div style={{\n                    overflowY: \"scroll\",\n                    maxHeight: \"700px\",\n                    minHeight: \"100px\",\n                    borderRadius: \"5px\",\n                    margin: \"2px 0px 3px\",\n                    padding: \"5px\",\n                    backgroundColor: \"rgb(29, 31, 33)\",\n                    color: \"rgb(250, 250, 250)\",\n                }}>\n                    {items.map((item, index) => {\n                        return <JsonItem index={reverseIndex ? items.length - index : index + 1}\n                                         key={item.key}\n                                         display={\"table-cell\"}\n                                         description={item.description}\n                                         jsonItem={item.value}/>;\n                    })}\n                </div>\n            </div>\n        );\n    }\n};\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport LogList from \"../containers/LogList\";\nimport JsonList from \"../containers/JsonList\";\nimport './grid.css';\n\nclass Grid extends Component {\n    static propTypes = {\n        entities: PropTypes.shape({\n            activeExpectations: PropTypes.array.isRequired,\n            proxiedRequests: PropTypes.array.isRequired,\n            recordedRequests: PropTypes.array.isRequired,\n            logMessages: PropTypes.array.isRequired,\n        }).isRequired,\n        requestFilter: PropTypes.object.isRequired,\n    };\n\n    render() {\n        const {\n            entities: {\n                activeExpectations = [],\n                proxiedRequests = [],\n                recordedRequests = [],\n                logMessages = [],\n            },\n        } = this.props;\n        return (\n            <div style={{\n                margin: \"1%\",\n                width: \"98%\"\n            }}>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"1100px\",\n                }}>\n                    <LogList items={logMessages}\n                             header={\"Log Messages (most recent at the top)\"}/>\n                </div>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"1100px\",\n                }}>\n                    <JsonList items={activeExpectations}\n                              header={\"Active Expectations (in the order they are applied)\"}\n                              reverseIndex={false}/>\n                </div>\n                <div className=\"row\" style={{\n                    borderStyle: \"dashed\",\n                    borderWidth: \"1px\",\n                    margin: \"15px 0\",\n                    padding: \"17px 17px\",\n                    minWidth: \"1100px\",\n                }}>\n                    <div style={{\n                        width: \"49%\",\n                        minWidth: \"500px\",\n                        float: \"left\",\n                        padding: \"0\",\n                        paddingRight: \"1%\",\n                        borderRightStyle: \"dashed\",\n                        borderRightWidth: \"1px\",\n                    }}>\n                        <JsonList items={recordedRequests}\n                                  header={\"Received Requests (most recent at the top)\"}/>\n                    </div>\n                    <div style={{\n                        width: \"49%\",\n                        minWidth: \"500px\",\n                        float: \"right\"\n                    }}>\n                        <JsonList items={proxiedRequests}\n                                  header={\"Proxied Requests (most recent at the top)\"}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    const {\n        activeExpectations = [],\n        proxiedRequests = [],\n        recordedRequests = [],\n        logMessages = [],\n    } = state.entities;\n\n    const {\n        requestFilter = {}\n    } = state;\n\n    return {\n        entities: {\n            activeExpectations,\n            proxiedRequests,\n            recordedRequests,\n            logMessages,\n        },\n        requestFilter\n    }\n};\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Grid)\n","import React, {Component} from 'react';\nimport RequestFilter from \"../components/RequestFilter\";\nimport Grid from './Grid';\nimport {parse} from 'query-string';\n\nexport default class App extends Component {\n    static host() {\n        if (window.location.search && parse(window.location.search).host) {\n            return parse(window.location.search).host;\n        } else if (window.location.hostname) {\n            return window.location.hostname;\n        }\n        return window.location.hostname;\n    }\n\n    static port() {\n        if (window.location.search && parse(window.location.search).port) {\n            return parse(window.location.search).port;\n        } else if (window.location.port) {\n            return window.location.port;\n        } else if (window.location.protocol === \"https:\") {\n            return 443;\n        } else {\n            return 80;\n        }\n    }\n\n    static secure() {\n        if (window.location.protocol) {\n            return window.location.protocol === \"https:\";\n        } else {\n            return false;\n        }\n    }\n\n    render() {\n        return (<div>\n            <RequestFilter host={App.host()} port={App.port()} secure={App.secure()}/>\n            <Grid/>\n        </div>)\n    }\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\nimport App from './containers/App'\nimport configureStore from './store/configureStore'\nimport {MuiThemeProvider} from \"material-ui\";\n\nconst store = configureStore();\n\nrender(\n    <Provider store={store}>\n        <MuiThemeProvider>\n            <App/>\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById('app')\n);\n","import {MESSAGE_RECEIVED} from '../actions'\n\nconst entities = (state = {\n    activeExpectations: [],\n    proxiedRequests: [],\n    recordedRequests: [],\n    logMessages: []\n}, action) => {\n    if (action.type === MESSAGE_RECEIVED && action.entities) {\n        return {\n            activeExpectations: action.entities.activeExpectations ? action.entities.activeExpectations : [],\n            proxiedRequests: action.entities.proxiedRequests ? action.entities.proxiedRequests : [],\n            recordedRequests: action.entities.recordedRequests ? action.entities.recordedRequests : [],\n            logMessages: action.entities.logMessages\n        };\n    }\n    return state;\n};\n\nexport default entities","import {combineReducers} from 'redux'\nimport {reducer as form} from 'redux-form'\nimport entities from './entities'\n\nconst rootReducer = combineReducers({\n    entities,\n    form,\n});\n\nexport default rootReducer","import {CONNECT_SOCKET, DISCONNECT_SOCKET, SEND_MESSAGE, webSocketMessageReceived} from '../actions'\n\nexport default (function () {\n    let socket = null;\n    let connected = false;\n\n    let disconnectSocket = function () {\n        connected = false;\n        if (socket != null) {\n            socket.close()\n        }\n        socket = null\n    };\n    let connectSocket = function (action, next) {\n        if (socket != null) {\n            socket.close()\n        }\n        socket = new WebSocket((action.secure ? \"wss\" : \"ws\") + \"://\" + action.host + \":\" + action.port + \"/_mockserver_ui_websocket\");\n        socket.onmessage = (event) => {\n            next(webSocketMessageReceived(\n                JSON.parse(event.data)\n            ))\n        };\n        socket.onclose = () => {\n            disconnectSocket();\n        };\n        socket.onopen = () => {\n            connected = true;\n            if (socket && action.message && socket.readyState === 1) {\n                socket.send(JSON.stringify(action.message))\n            }\n        }\n    };\n    return store => next => action => {\n        switch (action.type) {\n            case CONNECT_SOCKET:\n                connectSocket(action, next);\n                break;\n            case DISCONNECT_SOCKET:\n                disconnectSocket();\n                break;\n            case SEND_MESSAGE:\n                if (connected) {\n                    socket.send(JSON.stringify(action.message))\n                } else {\n                    connectSocket(action, next)\n                }\n                break;\n            default:\n                // listen for changes here\n                return next(action)\n        }\n    }\n})()","export default store => next => action => {\n    next({ ...action, getState: store.getState });\n}","import {applyMiddleware, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\nimport socket from '../middleware/socket'\nimport exposeState from \"../middleware/exposeState\";\n\nconst configureStore = preloadedState => {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunk, socket, exposeState)\n    )\n};\n\nexport default configureStore\n"],"sourceRoot":""}